generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  WORKER
  CLIENT
}

enum JobType {
  RESIDENTIAL
  COMMERCIAL
  INDUSTRIAL
}

enum JobStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          Role      @default(WORKER)
  accounts      Account[]
  sessions      Session[]

  worker_assignments Assignment[]
  client            Client?
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Client {
  id     String @id @default(cuid())
  name   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  jobs   Job[]
}

model Job {
  id          String      @id @default(cuid())
  title       String
  description String
  location    String
  type        JobType
  status      JobStatus   @default(PENDING)
  start_date  DateTime
  end_date    DateTime
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  clientId    String
  client      Client      @relation(fields: [clientId], references: [id])
  assignments Assignment[]
}

model Assignment {
  id       String @id @default(cuid())
  jobId    String
  workerId String
  job      Job    @relation(fields: [jobId], references: [id])
  worker   User   @relation(fields: [workerId], references: [id])
}
