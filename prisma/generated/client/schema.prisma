datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  role       Role     @default(ADMIN)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Worker {
  id         String          @id @default(uuid())
  name       String
  email      String?
  phone      String?
  active     Boolean         @default(true)
  created_at DateTime        @default(now())
  updated_at DateTime        @updatedAt
  jobs       JobAssignment[]

  @@map("workers")
}

model Client {
  id         String   @id @default(uuid())
  name       String
  address    String
  contact    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  jobs       Job[]

  @@map("clients")
}

model Job {
  id          String          @id @default(uuid())
  title       String
  description String
  location    String
  status      JobStatus       @default(PENDING)
  type        JobType
  start_date  DateTime
  end_date    DateTime
  client_id   String
  created_at  DateTime        @default(now())
  updated_at  DateTime        @updatedAt
  client      Client          @relation(fields: [client_id], references: [id])
  assignments JobAssignment[]

  @@map("jobs")
}

model JobAssignment {
  id         String   @id @default(uuid())
  job_id     String
  worker_id  String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  job        Job      @relation(fields: [job_id], references: [id])
  worker     Worker   @relation(fields: [worker_id], references: [id])

  @@map("job_assignments")
}

enum Role {
  ADMIN
  USER
}

enum JobType {
  REGULAR
  DEEP_CLEAN
  MAINTENANCE
  SPECIAL
}

enum JobStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
